{"version":3,"sources":["store/configureStore.js","resource/baize.jpg","serviceWorker.js","components/SiderMemu/SiderMenu.js","components/SiderMemu/index.js","components/hoc/withBuilder.js","pages/uuid/index.js","utils/index.js","pages/product/index.js","pages/Welcome.js","routes.js","pages/Home.js","index.js","reducers/auth.js","reducers/index.js","store/configureStore.prod.js"],"names":["module","exports","require","__webpack_require__","p","Boolean","window","location","hostname","match","Sider","Layout","SiderMenu","collapsed","this","props","react_default","a","createElement","className","trigger","collapsible","breakpoint","width","src","logo","alt","menu","theme","mode","defaultSelectedKeys","Item","key","icon","type","Link","to","React","Component","contextTypes","router","PropTypes","object","SiderMenuWrapper","isMobile","onClose","drawer","placement","closable","visible","style","padding","SiderMemu_SiderMenu","wihtBuilder","build","WrappedComponent","_React$Component","_WithBuilder","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleCopy","e","console","log","setState","copied","handleBulid","text","state","inherits","createClass","value","_this$state","assign","onBuild","onCopy","UUIDComponent","withBuilder","len","radix","i","r","chars","split","uuid","length","Math","random","join","getUUID","row","align","justify","gutter","col","textAlign","span","input","placeholder","defaultValue","readOnly","addonAfter","lib","es_button","onClick","ProductCodeComponent","pCode","STRS","floor","Welcome","routes","Route","exact","path","component","UUIDBuilder","Header","Content","Home","toggle","layout","components_SiderMemu","background","margin","minHeight","Routes","store","configureStroe","ReactDOM","render","es","BrowserRouter","src_pages_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","anth","arguments","undefined","combineReducers","auth","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","promise"],"mappings":"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","file":"static/js/main.2b8be60e.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod');\n} else {\n    module.exports = require('./configureStore.dev');\n}","module.exports = __webpack_public_path__ + \"static/media/baize.012af2b4.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './index.css';\nimport { Layout, Menu, Icon} from 'antd';\nimport {Link} from 'react-router-dom';\nimport logo from '../../resource/baize.jpg';\nimport PropTypes from \"prop-types\";\nconst { Sider } = Layout;\n\n\nclass SiderMenu extends React.Component {\n\n    static contextTypes = {\n        router:PropTypes.object\n    }\n\n\n    render() {\n        const { collapsed } = this.props;\n        return (\n            <Sider\n                className=\"sider\"\n                trigger={null}\n                collapsible\n                breakpoint=\"lg\"\n                collapsed={collapsed}\n                width={256}\n            >\n                <div className=\"logo\" >\n                    <img src={logo} alt=\"logo\" />\n                    <h1>Dev Tools</h1>\n                </div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\" >\n                        <Icon type=\"key\" />\n                        <span>UUID</span>\n                        <Link to={\"/uuid\"}></Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Icon type=\"barcode\" />\n                        <span>Product Code</span>\n                        <Link to={\"/product\"}></Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default SiderMenu;","import React from 'react'\nimport SiderMenu from './SiderMenu';\nimport { Drawer } from 'antd';\n\nconst SiderMenuWrapper = (props) => {\n    const { collapsed, isMobile, onClose } = props;\n    return (\n        isMobile ? (\n            <Drawer\n                placement=\"left\"\n                closable={false}\n                onClose={onClose}\n                visible={!collapsed}\n                style={{\n                    padding: 0,\n                }}\n            >\n                <SiderMenu { ...props } />\n            </Drawer>\n        ) : (\n            <SiderMenu { ...props } />\n        )\n    )\n}\n\nexport default SiderMenuWrapper;","import React from 'react';\nconst wihtBuilder = (build) => (WrappedComponent) => {\n    return class _WithBuilder extends React.Component{\n        constructor(props) {\n            super(props);\n            this.state={\n                text:\"\",\n                copied:false\n            }\n        }\n\n        handleCopy = (e) => {\n            console.log(\"copy\")\n            this.setState({\n                copied:true\n            })\n        }\n\n        handleBulid = () => {\n            console.log(\"Build\")\n            const text = build();\n            this.setState({\n                text:text,\n                copied:false\n            })\n        }\n        render(){\n\n            const {text,copied} = this.state;\n            return (\n                <WrappedComponent\n                    {...this.props}\n                    onBuild={this.handleBulid}\n                    onCopy={this.handleCopy}\n                    text={text}\n                    copied={copied}\n                />\n            )\n        }\n    }\n}\n\n\n\nexport default wihtBuilder;","\n\nimport React from 'react';\nimport {Button, Col, Icon, Input, Row} from \"antd\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport PropTypes from \"prop-types\";\nimport withBuilder from '../../components/hoc/withBuilder';\nimport {getUUID} from '../../utils'\n\nconst getUUIDWithParams = () => {\n    return getUUID(32,16);\n}\n\nconst UUIDComponent = withBuilder(getUUIDWithParams)(props => {\n    const {text,copied,onCopy,onBuild} = props;\n    return (\n        <Row type=\"flex\" align=\"middle\" justify=\"center\" gutter={10}>\n            <Col>\n                <label style={{textAlign:\"center\"}}>UUID：</label>\n            </Col>\n\n            <Col span={12} >\n                <Input\n                    placeholder=\"生成UUID\"\n                    defaultValue={text}\n                    readOnly\n                    addonAfter={\n                        <Col>\n                            <CopyToClipboard text={text} onCopy={onCopy}>\n                                <Icon  type={copied?\"check\":\"copy\"}/>\n                            </CopyToClipboard>\n                        </Col>\n                    }/>\n            </Col>\n\n            <Col>\n                <Button type=\"primary\" onClick={onBuild} >生成</Button>\n            </Col>\n        </Row>\n\n    );\n});\n\nUUIDComponent.propTypes = {\n    text:PropTypes.string,\n    copied:PropTypes.bool,\n    onBuild:PropTypes.func,\n    onCopy:PropTypes.func\n}\n\nexport default UUIDComponent;","\n\nexport const getProductCode = () => {\n    const STRS_LENGTH = 100;\n    const CODE_LENGTH = 10;\n    const PRIFIX_CODE = \"690\";\n    var pCode = \"\";\n    var STRS = []\n    for(let i=0;i<STRS_LENGTH;i++){\n        STRS[i] = Math.floor(Math.random() * CODE_LENGTH);\n    }\n    pCode += PRIFIX_CODE;\n    for(let i=0;i<CODE_LENGTH;i++){\n        let index = Math.floor(Math.random() * STRS_LENGTH);\n        pCode += STRS[index];\n    }\n    return pCode;\n\n}\nexport const getUUID = (len, radix) => {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = [], i;\n    radix = radix || chars.length;\n\n    if (len) {\n        // Compact form\n        for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\n    } else {\n        // rfc4122, version 4 form\n        var r;\n\n        // rfc4122 requires these characters\n        // uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n        // uuid[14] = '4';\n\n        // Fill in random data. At i==19 set the high bits of clock sequence as\n        // per rfc4122, sec. 4.1.5\n        for (i = 0; i < 36; i++) {\n            if (!uuid[i]) {\n                r = 0 | Math.random()*16;\n                uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n            }\n        }\n    }\n    return uuid.join('');\n\n}","import React from 'react';\nimport {getProductCode} from '../../utils'\nimport {Button, Col, Icon, Input, Row} from \"antd\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport withBuilder from '../../components/hoc/withBuilder';\nimport PropTypes from \"prop-types\";\n\n\n\nconst ProductCodeComponent = withBuilder(getProductCode)(props => {\n    const {text,copied,onCopy,onBuild} = props;\n    return (\n        <Row type=\"flex\" align=\"middle\" justify=\"center\" gutter={10}>\n            <Col>\n                <label style={{textAlign:\"center\"}}>货品码：</label>\n            </Col>\n\n            <Col span={8} >\n                <Input\n                    placeholder=\"生成货品码\"\n                    defaultValue={text}\n                    readOnly\n                    addonAfter={\n                        <Col>\n                            <CopyToClipboard text={text} onCopy={onCopy}>\n                                <Icon  type={copied?\"check\":\"copy\"}/>\n                            </CopyToClipboard>\n                        </Col>\n                    }/>\n            </Col>\n\n            <Col>\n                <Button type=\"primary\" onClick={onBuild} >生成</Button>\n            </Col>\n        </Row>\n    );\n});\n\n\nProductCodeComponent.propTypes = {\n    text:PropTypes.string,\n    copied:PropTypes.bool,\n    onBuild:PropTypes.func,\n    onCopy:PropTypes.func\n}\n\n\nexport default ProductCodeComponent;","import React from 'react';\nclass Welcome extends React.Component{\n    render(){\n        return(\n            <div>\n                Welcome\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport UUIDBuilder from './pages/uuid';\nimport ProductCodeComponent from './pages/product';\nimport Welcome from './pages/Welcome';\nexport default (\n    <div className=\"container\">\n        <Route exact path=\"/\" component={Welcome}/>\n        <Route  path=\"/uuid\" component={UUIDBuilder}/>\n        <Route  path=\"/product\" component={ProductCodeComponent}/>\n    </div>\n)","import React,{Component} from 'react';\nimport './Home.css';\nimport {Layout,Icon} from 'antd';\nimport SiderMenu from '../components/SiderMemu'\nimport Routes from '../routes';\n\nconst {Header,Content} = Layout;\n\nclass Home extends Component{\n\n    // true 的时候默认不可见, false 的时候可见\n    state = {\n        collapsed:false,\n    };\n\n    // 切换布尔值，true 变成 false，false 变成 true\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            collapsed: true,\n        });\n    };\n\n    render() {\n        const { collapsed } = this.state;\n        return (\n            <Layout>\n                <SiderMenu\n                    collapsed={collapsed}\n                    onClose={this.onClose}\n                />\n                <Header style={{ background: '#fff', padding: 0 }}>\n                    <Icon\n                        className=\"trigger\"\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.toggle}\n                    />\n                </Header>\n                <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\n                    {Routes}\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default Home;","\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport configureStroe from './store/configureStore';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport Home from \"./pages/Home\";\nconst store = configureStroe();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <div>\n                <Home/>\n            </div>\n        </Router>\n    </Provider>,\n    document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","\nconst anth = (state={},action = {}) => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n\nexport default anth;","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth,\n});","import thunk from 'redux-thunk';\nimport {createStore,applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport promise from 'redux-promise-middleware';\n\n\nconst configureStore = (preloadedState) => {\n    const store = createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk,promise())\n    );\n    return store;\n}\n\nexport default configureStore;"],"sourceRoot":""}